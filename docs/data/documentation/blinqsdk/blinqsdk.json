{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"BlinqSDK features:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"handles NFC communication with Blinq sensors"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"displays blood glucose measurements in a graph"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"stores data in an encrypted file"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"provides an interface to capture log messages"}]}]}]},{"anchor":"Setup","level":2,"type":"heading","text":"Setup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add NFC entitlement to your app:"}]},{"type":"codeListing","syntax":null,"code":["<key>com.apple.developer.nfc.readersession.formats<\/key>","<array>","    <string>TAG<\/string>","<\/array>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add NFCReaderUsageDescription to your "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":" file:"}]},{"type":"codeListing","syntax":null,"code":["<key>NFCReaderUsageDescription<\/key>","<string>App uses NFC to communicate wih BLINQ wearable devices.<\/string>"]},{"anchor":"Usage","level":2,"type":"heading","text":"Usage"},{"type":"codeListing","syntax":"swift","code":["import BlinqSDK","","\/\/ Setup logging","Blinq.setLogLevel(.info)","Blinq.setLogLevel(.debug, for: .nfc)","","\/\/ use one of built-in LogHandlers","let logFileRecorder = LogFileRecorder(file: \"app.log\", in: .documentDirectory)","Blinq.setLogHandlers(logFileRecorder.logHandler, StdoutLogHandler)","Blinq.setLogHandler(OSLogHandler)","\/\/ or custom LogHandler","Blinq.setLogHandler { category, level, message in","    myLogger.log(level, category, message())","}","","\/\/ Setup SDK","do {","    try Blinq.initialize()","} catch {","    Blinq.resetStorage()","}","","let scanner = Blinq.scanner","scanner.license = .init(fromFile: \"vendor2000.lic\")!","scanner.localizationBundle = .main","scanner.delegate = Delegate()","","let storage = Blinq.storage","let traceUploader = Blinq.traceUploader","","class Delegate: ScannerDelegate {","    func scanner(_ scanner: Scanner, didUpdateProgress progress: Double) -> String? {","        NSLocalizedString(\"Scanning...\", comment: \"\") + \" \\(progress * 100)%\"","    }","    ","    func scanner(_ scanner: Scanner, willDisplayError: Error) -> String? {","        switch error {","        case ...: return NSLocalizedString(\"...\", comment: \"\")","        default: return error.localizedDescription","        }","    }","}","","\/\/ Scan glucose and steps","Task {","    let result = await scanner.scanData(.glucose, .steps)","}","","\/\/ Scan and upload trace","Task {","    let result = await scanner.scanTrace(restartOnError: true)","    if let sensor = result.sensor, result.isFinished {","        do {","            try await traceUploader.uploadTrace(from: sensor.serialNumber, timeout: 30)","        } catch {","            \/\/ handle error - e.g. app can store serial number","            \/\/ and try uploading trace later when internet connection is more stable","        }","    }","}","","\/\/ Get scanned blood glucose values","_ = try await storage.getGlucoseData(in: startDate ..< endDate)","    ","\/\/ Subscribe to receive newly scanned blood glucose values","let subscription = storage.updates.glucoseData { glucoseData in","    \/\/ Process newly scanned blood glucose values","}","","\/\/ Display glucose in chart","let bounds = GlucoseChartBounds.mmoll(target: 5.5, glucose: 3.5...10, view: 0...20)","","\/\/ Static chart with selected time period","GlucoseChart(","    timeRange: startOfYesterday...endOfYesterday,","    unit: .mmoll,","    bounds: bounds",")","","\/\/ Live chart (automatically scrolls as time progresses)","LiveGlucoseChart(","    maxAge: 3 * 3600,","    unit: .mmoll,","    bounds: bounds",")"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/blinqsdk\/blinqsdk"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BlinqSDK\/documentation\/BlinqSDK\/BlinqSDK","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"BlinqSDK is a comprehensive framework for integrating Blinq wearable devices into iOS applications. It includes components handling NFC communication with Blinq sensors, blood glucose graph visualization, secure data storage, and logging."}],"kind":"article","metadata":{"roleHeading":"Article","title":"BlinqSDK","role":"article","modules":[{"name":"BlinqSDK"}]},"hierarchy":{"paths":[["doc:\/\/BlinqSDK\/documentation\/BlinqSDK"]]},"references":{"doc://BlinqSDK/documentation/BlinqSDK":{"role":"collection","title":"BlinqSDK","abstract":[],"identifier":"doc:\/\/BlinqSDK\/documentation\/BlinqSDK","kind":"symbol","type":"topic","url":"\/documentation\/blinqsdk"}}}